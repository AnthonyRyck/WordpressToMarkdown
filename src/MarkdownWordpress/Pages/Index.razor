@page "/"
@inject IMainViewModel viewModel

<PageTitle>Index</PageTitle>

<h1>Conversion</h1>

<div class="padding-10px">
	<div>URL du site wordpress : </div>
	<EditForm Model="@viewModel.Url" 
				OnValidSubmit="@viewModel.OnValidSubmitUrl">
		<DataAnnotationsValidator />
		<ValidationSummary />

		<div>
			<ValidationMessage For="@(() => viewModel.Url)" />
		</div>
		<InputText id="name" @bind-Value="viewModel.Url.UrlWordpressSite" />
		
		<button type="submit" class="btn btn-secondary">GET</button>
		<a href="https://github.com/AnthonyRyck/WordpressToMarkdown#url-wordpress-json" target="_blank">Aide pour mettre une "bonne"" URL</a>
	</EditForm>
</div>

@if(viewModel.IsLoading)
{
	<div>Récupération du JSON en cours, et convertion en MarkDown...</div>
}

@if(viewModel.IsError)
{
	<div class="alert">Erreur sur la récupération ou la conversion des données</div>
}

<div class="padding-10px">
	<select id="resultMd"
			@onchange="viewModel.OnSelectResultMd">

		<option value="NoCHOICE"></option>
		@foreach (var result in viewModel.ResultConvertMd)
		{
	    <option value="@result.Titre">@result.Titre</option>
		}
	</select>
	@if(viewModel.ResultMarkdownSelected != null)
	{
	<button type="button" 
			class="btn btn-secondary" 
			@onclick="viewModel.Download">Télécharger</button>
	}
</div>

@*Affichage d'un coté le résulat MD "brut" et de l'autre avec la mise en forme*@
<div class="row">
	@if(viewModel.ResultMarkdownSelected != null)
	{
	<div class="col-6">
		<textarea class="textarea" disabled>
			@viewModel.ResultMarkdownSelected.MarkdownContent;
		</textarea>
	</div>

	<div class="col-6">
			<MudMarkdown Value="@viewModel.ResultMarkdownSelected.MarkdownContent" 
						CodeBlockTheme="CodeBlockTheme.AtomOneDark" />
	</div>
	}
</div>

@code {
   	protected override void OnInitialized()
	{
		viewModel.SetStateHasChanged(StateHasChanged);
	}
}